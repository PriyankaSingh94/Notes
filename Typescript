=> Types available in typescript are boolean, number, string, array,tuple, void, null, undefined,enum ,any , never and 
   object. 
=> We can use backtick to create template strings that can span multiple lines and can have embedded expressions.
=> Tuple eg. = let arr: [string, number]
=> Any is used to opt in and optout from typechecking. We can't use object as it will not allow invoking methods even if 
   those methods are present for the variable.
=> Generics knows which data type has to be returned while any doesnt.
=> Void can only be assigned to null or undefined type.
=> Null, undefined and never are subtype of all data types.
=> No type is assigneble to never.
=> Object represent non primitive datatype.

=> const variable can't be reassigned.
=> let uses lexical scoping or block scoping.
=> A closure is combination of a function and environment within which the function was declared.
=> Callback is a single function called in responce to an event.
=> Javascript allows to emulate private methods using closures.
=> Private methods in java can be accessed only by the methods in same class in same way javascript variables that are private to the method
   can be accessed externally by public methods of that method.
   check => (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures) , emulating private methods using closures.
=> Closures provide OOP functionality like data hiding and encapsulation.
